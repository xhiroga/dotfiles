# set PATH, MANPATH, etc., for Homebrew.
# `.bash_profile`と`.zprofile`の共通設定のため、当初`.profile`という名前を検討した。
# しかし、`.profile`は`sh`（Bourneシェル）のログインシェル設定ファイル名であるため、混乱を避けるため`.path`を用いた。

## Homebrew
# https://github.com/Homebrew/install/blob/511002fcae8217680de7ac194b17fb45a7856d56/uninstall.sh#L66-L87
un="$(uname)"
case "${un}" in
  Linux)
    ostype=linux
    homebrew_prefix_default=/home/linuxbrew/.linuxbrew
    ;;
  Darwin)
    ostype=macos
    if [[ "$(uname -m)" == "arm64" ]]
    then
      homebrew_prefix_default=/opt/homebrew
    else
      homebrew_prefix_default=/usr/local
    fi
    realpath() {
      cd "$(dirname "$1")" && echo "$(pwd -P)/$(basename "$1")"
    }
    ;;
  *)
    abort "Unsupported system type '${un}'"
    ;;
esac

if [ -d "$homebrew_prefix_default" ]; then
  eval "$($homebrew_prefix_default/bin/brew shellenv)"

  softwares=(
    "coreutils"
    "findutils"
    "gawk"
    "gnutls"
    "gnu-indent"
    "gnu-sed"
    "gnu-tar"
    "grep"
  )

  for software in "${softwares[@]}"; do
    GNUBIN="$HOMEBREW_PREFIX/opt/$software/libexec/gnubin"
    [ -d "$GNUBIN" ] && export PATH="$GNUBIN:$PATH"

    GNUMAN="$HOMEBREW_PREFIX/opt/$software/libexec/gnuman"
    [ -d "$GNUMAN" ] && export MANPATH="$GNUMAN:$MANPATH"
  done
fi

## CUDA
if [ -d "/usr/local/cuda/bin" ]; then
  # https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#post-installation-actions
  export PATH="/usr/local/cuda/bin:$PATH"
  export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
fi

### Find libcuda.so from WSL
[ -d "/usr/lib/wsl/lib" ] && export LD_LIBRARY_PATH=/usr/lib/wsl/lib:$LD_LIBRARY_PATH

## Rust
CARGO_BIN="$HOME/.cargo/bin"
if [ -d "$CARGO_BIN" ]; then
    export PATH="$CARGO_BIN:$PATH"
    export CARGO_NET_GIT_FETCH_WITH_CLI=true
    # build-in の gitだと ssh-agent authentication に失敗するため。
    # https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli
fi
export RUSTUP=$(dirname $(which rustup))
export PATH="$RUSTUP:$PATH"
